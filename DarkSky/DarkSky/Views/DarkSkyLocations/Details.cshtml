@model DarkSky.Models.DarkSkyLocation

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>
<style>
    #right-panel {
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
    }

        #right-panel select, #right-panel input {
            font-size: 15px;
        }

        #right-panel select {
            width: 100%;
        }

        #right-panel i {
            font-size: 12px;
        }

    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    #direction-map {
        float: left;
        width: 100%;
        height: 300px;
    }

    #right-panel {
        float: right;
        width: 34%;
        height: 100%;
    }

    .panel {
        height: 100%;
        overflow: auto;
    }
</style>

<h4>DarkSkyLocations</h4>
<hr />
<div class="col-sm-6">

    <h2>Directions</h2>


    <h4>Dark Sky Location</h4>

    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StreetAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StreetAddress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ZipCode)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.AverageRating)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AverageRating)
        </dd>

    </dl>
</div>
<div class="col-sm-6">
    <div class="col-sm-6">
        <div id="direction-map"></div>
    </div>
    <div class="col-sm-6">
        <div id="right-panel">
            <p>Total Distance: <span id="total"></span></p>
        </div>
    </div>
</div>
    @*<p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.LocationId }) |
        @Html.ActionLink("Back to List", "Index")
    </p>*@

    @*<script>
        function directionMap() {
            var map = new google.maps.Map(document.getElementById('direction-map'), {
                zoom: 4,
                center: { lat: -24.345, lng: 134.46 }  // Australia.
            });

            var directionsService = new google.maps.DirectionsService;
            var directionsRenderer = new google.maps.DirectionsRenderer({
                draggable: true,
                map: map,
                panel: document.getElementById('right-panel')
            });

            directionsRenderer.addListener('directions_changed', function () {
                computeTotalDistance(directionsRenderer.getDirections());
            });

            displayRoute('Perth, WA', 'Sydney, NSW', directionsService,
                directionsRenderer);
        }

        function displayRoute(origin, destination, service, display) {
            service.route({
                origin: origin,
                destination: destination,
                waypoints: [{ location: 'Adelaide, SA' }, { location: 'Broken Hill, NSW' }],
                travelMode: 'DRIVING',
                avoidTolls: true
            }, function (response, status) {
                if (status === 'OK') {
                    display.setDirections(response);
                } else {
                    alert('Could not display directions due to: ' + status);
                }
            });
        }

        function computeTotalDistance(result) {
            var total = 0;
            var myroute = result.routes[0];
            for (var i = 0; i < myroute.legs.length; i++) {
                total += myroute.legs[i].distance.value;
            }
            total = total / 1000;
            document.getElementById('total').innerHTML = total + ' km';
        }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC95EG4riAADzoArZPhKYRDGjz7Hz7RH3w&callback=directionMap">
    </script>*@

<p>
    @Html.ActionLink("Back to List", "Index") |
    @Html.ActionLink("Give A Rating", "Create", "RatingsCheckIns") 
</p>
